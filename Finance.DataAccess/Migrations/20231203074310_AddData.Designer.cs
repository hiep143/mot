// <auto-generated />
using System;
using Finance.DataAccess.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Finance.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20231203074310_AddData")]
    partial class AddData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-rc.2.23480.1");

            modelBuilder.Entity("Finance.Models.Models.Spending", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<int>("Description")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdWallet")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdWallet");

                    b.ToTable("Spendings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 50.00m,
                            Balance = 100.00m,
                            Description = 0,
                            IdWallet = 1,
                            Time = new DateTime(2023, 12, 3, 15, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Amount = 20.00m,
                            Balance = 80.00m,
                            Description = 1,
                            IdWallet = 1,
                            Time = new DateTime(2023, 12, 4, 17, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Amount = 30.00m,
                            Balance = 50.00m,
                            Description = 2,
                            IdWallet = 1,
                            Time = new DateTime(2023, 12, 4, 20, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Amount = 100.00m,
                            Balance = 50.00m,
                            Description = 3,
                            IdWallet = 2,
                            Time = new DateTime(2023, 12, 5, 15, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Amount = 200.00m,
                            Balance = 300.00m,
                            Description = 4,
                            IdWallet = 2,
                            Time = new DateTime(2023, 12, 5, 20, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Amount = 25.00m,
                            Balance = 275.00m,
                            Description = 5,
                            IdWallet = 2,
                            Time = new DateTime(2023, 12, 6, 8, 20, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Amount = 40.00m,
                            Balance = 235.00m,
                            Description = 0,
                            IdWallet = 2,
                            Time = new DateTime(2023, 12, 6, 21, 50, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Finance.Models.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mail")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Phone")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main Street",
                            Mail = "john.doe@example.com",
                            Name = "John Doe",
                            Password = "SamplePassword",
                            Phone = 1234567890,
                            UserName = "SampleUser"
                        });
                });

            modelBuilder.Entity("Finance.Models.Models.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ID_Card")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUser")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ID_Card = 123456789L,
                            IdUser = 1
                        },
                        new
                        {
                            Id = 2,
                            ID_Card = 2345134553L,
                            IdUser = 1
                        });
                });

            modelBuilder.Entity("Finance.Models.Models.Spending", b =>
                {
                    b.HasOne("Finance.Models.Models.Wallet", "Wallet")
                        .WithMany("Spendings")
                        .HasForeignKey("IdWallet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Finance.Models.Models.Wallet", b =>
                {
                    b.HasOne("Finance.Models.Models.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Finance.Models.Models.User", b =>
                {
                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("Finance.Models.Models.Wallet", b =>
                {
                    b.Navigation("Spendings");
                });
#pragma warning restore 612, 618
        }
    }
}
